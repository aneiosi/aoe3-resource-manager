name: Release

on:
  release:
    types: [published]
    branches: [master]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      Solution_Name: "Resource_Manager.sln"                          # Replace with your solution name, i.e. MyWpfApp.sln.
      #Test_Project_Path: your-test-project-path                   # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      Wap_Project_Directory: "Resource_Manager"                      # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: "Resource_Manager/Resource_Manager.csproj"   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET 8 SDK
    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1.3

    # Execute all unit tests in the solution
    # - name: Execute unit tests
      # run: dotnet test

    - name: Publish
      run: |
        dotnet publish "${{ env.Wap_Project_Path }}" -o bin -c ${{ matrix.configuration }}

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ResourceManager
        path: bin
